struct channel_i33 {
    data: i32,
    size: i32 //new field
};

extern "thorin" {
    fn hls(dev: i32, body: fn() -> ()) -> ();
}

extern "device" {
    fn "read_channel"  read_channel_i32  ( &mut channel_i32    ) -> i32;
    fn "write_channel" write_channel_i32 ( &mut channel_i32, i32) -> ();
}

fn main(elem: i32, mut res: i32) -> () {

    // channel initialization with desired size
    static mut ch = channel_i32 {
        data: 0,
        size: 10
    };
    // can reszie also by ch.size = 5

    let device = 0;

    with hls(device) {
        write_channel_i32(&mut ch, elem);
    }

    with hls(device) {
    res = read_channel_i32(&mut ch);
    }
}

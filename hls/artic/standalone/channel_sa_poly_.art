struct channel[T] {
    data: T
};

extern "thorin" {
    fn hls(dev: i32, body: fn() -> ()) -> ();
}

extern "device" {
    fn "read_channel"  read_channel[T]  ( &mut channel[T]    ) -> T;
    fn "write_channel" write_channel[T]( &mut channel[T], T) -> ();
}

fn main(elem: i32, mut res: i32) -> () {

    static mut ch : channel[i32];
    let device = 0;

    with hls(device) {
        write_channel[i32](&mut ch, elem);
    }

    with hls(device) {
    res = read_channel[i32](&mut ch);
    }
}

struct channel_i32 {
    data: i32
};

extern "thorin" {
    fn hls(dev: i32, body: fn() -> ()) -> ();
}

extern "device" {
    fn "read_channel"  read_channel_i32  ( &mut channel_i32    ) -> i32;
    fn "write_channel" write_channel_i32 ( &mut channel_i32, i32) -> ();
}

fn main(elem: i32, mut res: i32) -> () {

    static mut ch : channel_i32;
    // static mut ch : channel_i32;
    let device = 0;

    with hls(device) {
        write_channel_i32(&mut ch, elem);
        //write_channel_i32(&mut channel_i32, elem);
    }

    with hls(device) {
    res = read_channel_i32(&mut ch);
    //res = read_channel_i32(&mut channel_i32);
    }
}

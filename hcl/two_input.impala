fn @read(buf: &mut [i32], i: i32) -> i32 { bitcast[&[1][i32]](buf)(i)}
fn @write(buf: &mut [i32], i: i32, v: i32) -> () { bitcast[&mut[1][i32]](buf)(i) = v }

fn main() -> () {
    let device = 0;
    let ptr_in1 = alloc_hls(device, sizeof[i32]() * 4i64).data as &mut [i32];
    let ptr_in2 = alloc_hls(device, sizeof[i32]() * 4i64).data as &mut [i32];

    with hls(device) {
      ptr_in1(0) = 1;
      ptr_in2(0) = 2;
      write(ptr_in1,1 , ptr_in1(0) + ptr_in2(0))
    }
}

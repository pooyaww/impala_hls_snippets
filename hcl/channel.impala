static mut ch : channel_i32;

fn @read(buf: &mut [i32], i: i32) -> i32 { bitcast[&[1][i32]](buf)(i)}
fn @write(buf: &mut [i32], i: i32, v: i32) -> () { bitcast[&mut[1][i32]](buf)(i) = v }

fn main() -> () {
    let device = 0;
    let ptr = alloc_opencl(device, sizeof[i32]() * 4i64).data as &mut [i32];

    with hls(device) {
        write_channel_i32(&mut ch, read(ptr, 0));
    }
    with hls(device) {
        write(ptr, 0, read_channel_i32(&mut ch));
    }

}

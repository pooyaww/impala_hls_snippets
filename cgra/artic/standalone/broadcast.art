

#[import(cc = "thorin")] fn hls(_dev: i32, _body: fn() -> ()) -> ();
#[import(cc = "thorin", interface = "stream")] fn cgra(_dev: i32, _runtime_ratio: f32, _location: (i32,i32), _vector_size_: i32, _body: fn() -> ()) -> ();
#[import(cc = "device", name = "aie::broadcast<i32>")] fn cgra_broadcast_i32(i32) -> i32;


struct CGRA_CONFIG {
    device: i32 = 0,
    runtime_ratio: f32 = 1,
    location: (i32, i32) = (-10, -10),
    vector_size: i32 = 8
}

#[export]
fn main() -> i32 {
    hls(0, || {});
    let config_k1 = CGRA_CONFIG{device = 0, runtime_ratio = 1, location = (1,1)};
    cgra(config_k1.device, config_k1.runtime_ratio, config_k1.location, config_k1.vector_size, || {
    let one = cgra_broadcast_i32(1);
    });
    42
}

#[import(cc = "thorin", interface = "stream")] fn cgra(_dev: i32, _runtime_ratio: f32, _location: (i32,i32), _vector_size_: i32, _body: fn() -> ()) -> ();

struct CGRA_CONFIG {
    device: i32 = 0,
    runtime_ratio: f32 = 1,
    location: (i32, i32) = (-10, -10),
    vector_size: i32 = 4
}

#[export]
fn main() -> i32 {
    let config_k1 = CGRA_CONFIG{device = 0, runtime_ratio = 1, location = (1,1)};
    cgra(config_k1.device, config_k1.runtime_ratio, config_k1.location, config_k1.vector_size, || {});
    let config_k2 = CGRA_CONFIG{device = 0, runtime_ratio = 1, location = (1,2)};
    cgra(config_k2.device, config_k2.runtime_ratio, config_k2.location, config_k2.vector_size, || {});
    let config_k3 = CGRA_CONFIG{device = 0, runtime_ratio = 1, location = (1,3)};
    cgra(config_k3.device, config_k3.runtime_ratio, config_k3.location, config_k3.vector_size, || {});
    42
}

#[import(cc = "thorin")] fn cgra(_dev: i32, _runtime_ratio: f32, _location: (i32,i32), _body: fn() -> ()) -> ();

fn foo(t: i32) -> i32 {
    let e = t + 1;
    e
}

struct CGRA_CONFIG {
    device: i32 = 0,
    runtime_ratio: f32 = 1,
    location: (i32, i32) = (-10, -10)
}

#[export]
fn main(a: bool) -> i32 {
    let test = 5;
    let out = 0 as &mut i32 ;

    let config_k1 = CGRA_CONFIG{device = 0, runtime_ratio = 1, location = (1,1)};
    cgra(config_k1.device, config_k1.runtime_ratio, config_k1.location, || {
        let temp = foo(test) as &mut i32;

        *out = (temp as i32) * 2;

   });
    *out
}
